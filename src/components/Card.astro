---
interface Props {
  number: string;
  content: string;
}

const { number, content } = Astro.props;
---

<christmas-card class="card" id={number}>
  <div class="front">
    <h2 class="card-title">
      {number}
    </h2>
  </div>
  <div class="back">
    <div class="card-content">
      {content}
    </div>
  </div>
</christmas-card>

<script>
  class CardFlip extends HTMLElement {
    constructor() {
      super();

      this.addEventListener("click", () => {
        trackClickedItem(this);
      });

      function trackClickedItem(card) {
        card.classList.add("opened");
        const cardID = card.id;
        const clickedCards =
          JSON.parse(localStorage.getItem("clickedCards")) || [];

        if (clickedCards.length === 0 || !clickedCards.includes(cardID)) {
          clickedCards.push(cardID);
          localStorage.setItem("clickedCards", JSON.stringify(clickedCards));
        }
      }

      // Function to check if a card is clicked and apply CSS class
      function rememberClickedCards() {
        const clickedCards = JSON.parse(localStorage.getItem("clickedCards"));

        if (clickedCards) {
          clickedCards.forEach((card) => {
            const cardElement = document.getElementById(card);

            if (cardElement && !cardElement.classList.contains("opened")) {
              cardElement.classList.add("opened");
            }
          });
        }
      }

      // Call the function when the page loads
      document.addEventListener("DOMContentLoaded", rememberClickedCards);
    }
  }
  customElements.define("christmas-card", CardFlip);
</script>

<style>
  .card {
    border: 2px dashed #dbdbdb;
    border-radius: 4px;
    display: block;
    aspect-ratio: 1/1;
    display: grid;
    z-index: 1;
    perspective: 1000px;
    background-color: #044204;
  }

  .card .card-title {
	z-index: 2;
	color: #fff;
    margin: 0;
    font-size: 2.25rem;    
	text-shadow: 1px 1px 2px #000;
  }

  .card.opened {
    box-shadow: 5px 3px 35px 0px rgba(0, 0, 0, 0.3) inset;
  }

  .card .front,
  .card .back {
    grid-row: -1;
    grid-column: -1;
    justify-self: center;
    align-self: center;
    height: 100%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    transform-style: preserve-3d;
  }

  .card .front {
    background-image: url(./images/cat_bg.jpg);
    transition: transform 0.4s ease-in-out;
    position: relative;
  }

  .card .front:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.15);
  }

  .card .back {
    position: relative;
    transform: rotateY(-180deg);
    transition: transform 0.4s ease-in-out;
    box-shadow: 5px 3px 35px 0px rgba(0, 0, 0, 0.3) inset;
  }

  .card.opened .front {
    transform: rotateY(180deg);
  }

  .card.opened .back {
    transform: rotateY(0deg);
    background-color: #dbdbdb;
  }
</style>
